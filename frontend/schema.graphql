schema {
  query: RootQueryType
  mutation: RootMutationType
}

type Account {
  email: String!
  id: String!
  isActive: Boolean!
  name: String!
  position: String!
  role: String!
}

input AccountInput {
  email: String!
  isActive: Boolean!
  name: String!
  password: String
  position: String!
  role: String!
}

type Count {
  count: Int
}

type DeleteSuccessResponse {
  message: String
}

type HelloWorld {
  message: String
}

input LoginInput {
  email: String!
  password: String!
}

type LogoutResponse {
  message: String
}

type RootMutationType {
  """Create new user account"""
  createAccount(input: AccountInput!): Account
  """Delete user account"""
  deleteAccount(input: String!): DeleteSuccessResponse
  """End active user session"""
  endSession: Session
  """Login as user with email and password"""
  login(input: LoginInput!): UserToken!
  """Logout user"""
  logout: LogoutResponse
  """Create user session or return active session"""
  startSession: Session!
  """Update new user account"""
  updateAccount(id: String!, input: AccountInput!): Account
}

type RootQueryType {
  account(id: String!): Account!
  accounts(query: String): [Account!]
  """Get active user session"""
  activeSession: Session
  """Hello world!"""
  helloWorld: HelloWorld
  me: Account!
  sessions(query: SessionsQuery): [Session!]
  todaySessions: [Session]
  totalSessions(query: SessionsQuery): Count
}

type Session {
  endTime: String
  id: String!
  note: String
  startTime: String!
  userId: String!
}

input SessionsQuery {
  page: Int!
  startDate: String!
}

type UserToken {
  email: String!
  name: String!
  position: String!
  role: String!
  token: String!
}