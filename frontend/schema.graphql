schema {
  query: RootQueryType
  mutation: RootMutationType
}

type Account {
  email: String!
  id: String!
  isActive: Boolean!
  name: String!
  position: String!
  role: String!
}

input AccountInput {
  email: String!
  isActive: Boolean!
  name: String!
  password: String
  position: String!
  role: String!
}

type DeleteSuccessResponse {
  message: String
}

type HelloWorld {
  message: String
}

input LoginInput {
  email: String!
  password: String!
}

type LogoutResponse {
  message: String
}

type RootMutationType {
  """Create new user account"""
  createAccount(input: AccountInput!): Account
  """Delete user account"""
  deleteAccount(input: String!): DeleteSuccessResponse
  """Login as user with email and password"""
  login(input: LoginInput!): UserToken!
  """Logout user"""
  logout: LogoutResponse
  """Update new user account"""
  updateAccount(id: String!, input: AccountInput!): Account
}

type RootQueryType {
  account(id: String!): Account!
  accounts: [Account!]
  """Hello world!"""
  helloWorld: HelloWorld
}

type UserToken {
  email: String!
  role: String!
  token: String!
}